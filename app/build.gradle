apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.0"
    defaultConfig {
        applicationId "com.tomsky.androiddemo"
        minSdkVersion 15
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets{  
        main{ 
            java.srcDirs = ['src/main/java', 'build/tmp'] 
        }  
    } 
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile fileTree(dir: 'build/tmp', include: ['*.java'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.2.0'
    compile 'com.android.support:recyclerview-v7:25.2.0'
    compile 'com.android.support:support-v4:25.2.0'
    compile 'com.android.support:support-v13:25.2.0'
    compile 'com.android.support:design:25.2.0'
    compile 'com.android.support:palette-v7:25.2.0'
    compile 'com.android.support:cardview-v7:25.2.0'
    compile project(':danmaku')

    testCompile 'junit:junit:4.12'
}


// task compileApi(type: JavaCompile) {
    // doFirst {
        //println "buildDir: $buildDir"
        // println "projectDir: $projectDir"
        //println "rootDir: $rootDir"
        // javaCompile {
            // source = src/main/java
            // include 'com/tomsky/androiddemo/api/*.api'
            //classpath = sourceSets.main.compileClasspath
            // destinationDir = src/main/java
        // }
    // }
// }

task rename(type: Copy) {
    def destDir = file("build/tmp/com/tomsky/androiddemo/api")
    destDir.mkdirs()

    from 'src/main/java/com/tomsky/androiddemo/api'
    into 'build/tmp/com/tomsky/androiddemo/api'
    //使用闭包映射文件名
    rename { String fileName ->
        fileName.replace('.api', '.java')
    }
    // 使用正则表达式映射文件名
    //rename '(.+)-staging-(.+)', '$1$2'
    //rename(/(.+)-staging-(.+)/, '$1$2')
}


afterEvaluate {  
    tasks.matching {  
        it.name == "generateDebugSources" || it.name == "generateReleaseSources"
    }.each { tk -> 
        tk.dependsOn(rename)  
    }  
} 
